<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.achobeta.infrastructure.dao.PositionMapper">

    <resultMap id="PositionResultMap" type="com.achobeta.infrastructure.dao.po.PositionPO">
        <id property="id" column="id"/>
        <result property="teamId" column="team_id"/>
        <result property="positionName" column="position_name"/>
        <result property="positionId" column="position_id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <insert id="addPosition" parameterType="com.achobeta.infrastructure.dao.po.PositionPO">
        insert into `position` (position_id,position_name,level,subordinate,team_id) values
        <foreach collection="positionPOList" item="position" separator=",">
             (#{position.positionId},#{position.positionName},#{position.level},#{position.subordinate},#{position.teamId})
        </foreach>
    </insert>

    <insert id="addUsersToPosition">
        insert into user_position (user_id, position_id) values
        <foreach collection="userIds" item="userId" separator=",">
            (#{userId},#{positionId})
        </foreach>
    </insert>

    <update id="deletePositionInPosition">
        update position set is_deleted = 1
        where team_id = #{teamId} and position_id in
        <foreach collection="positionsToDelete" item="positionId" separator="," open="(" close=")" >
                #{positionId}
        </foreach>
    </update>

    <update id="deletePositionInUserPosition">
        update user_position set is_deleted = 1
        where position_id in
        <foreach collection="positionsToDelete" item="positionId" separator="," open="(" close=")" >
            #{positionId}
        </foreach>
    </update>

    <select id="listSubordinateByPositionId" resultMap="PositionResultMap">
        select id,position_id,position_name,level,subordinate,team_id,
                create_by,create_time,update_by,update_time
        from position
        where position_id in (select subordinate
                                from position
                                where position_id = #{positionId}
                                        and is_deleted = 0)
                and subordinate = '' and is_deleted = 0
    </select>

    <select id="getPositionByPositionId" resultMap="PositionResultMap">
        select id,position_id,position_name,level,subordinate,team_id,
                create_by,create_time,update_by,update_time
        from position
        where position_id = #{positionId}
                and subordinate = ''
                and is_deleted = 0
    </select>

    <select id="getParentPositionByPositionId" resultMap="PositionResultMap">
        select id,position_id,position_name,level,subordinate,team_id,
                create_by,create_time,update_by,update_time
        from position
        where subordinate = #{positionId}
                and is_deleted = 0
    </select>

    <select id="listUserIdsByPositionIds" resultType="java.lang.String">
        select user_id
        from user_position
        where position_id in
        <foreach collection="positionIds" item="positionId" separator="," open="(" close=")" >
            #{positionId}
        </foreach>
        and is_deleted = 0
    </select>

</mapper>